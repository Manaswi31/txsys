<?xml version="1.0"?>
<process-model model-name="opencell_ms_phy" code-language="C" tv-in-db="no" tv-in-tb="no">
	<OPNET-info OPNET-release="14.5.A" OPNET-patchlevel="8" OPNET-model-data-version="14.0.A"/>
	<attribute-assignments>
		<assignment attribute-name="begsim intrpt" type="toggle" value="1"/>
		<assignment attribute-name="subqueue" type="compound">
			<sub-object>
				<attribute creation-mechanics="Model" name="count" type="integer" value="1"/>
				<attribute creation-mechanics="Model" name="list" type="object list">
					<object-list>
						<sub-object/>
					</object-list>
				</attribute>
			</sub-object>
		</assignment>
	</attribute-assignments>
	<state-variables>
<![CDATA[
Boolean	\sv_dch_inited;

Evhandle	\rach_try_timer;

Prohandle	\rach_pro;

Openbts_Frame_Struct*	\frame_struct_ptr;

Opencell_Phy_Mod_Data*	\phy_mod_data_ptr;

]]>
	</state-variables>
	<header-block>
<![CDATA[
#include "../include/openbts_support.h"

/*A request from RR module*/
#define CALL_REQ (op_intrpt_type()==OPC_INTRPT_REMOTE && \
	op_intrpt_code()==RR_Phy_Conn_Req)
#define DCH_INITED (sv_dch_inited)

]]>
	</header-block>
	<function-block>
<![CDATA[
static void init(void)
{
	Objid node_objid;
	
    FIN(init());

    frame_struct_ptr = (Openbts_Frame_Struct*) openbts_mem_alloc(
	    sizeof (Openbts_Frame_Struct));
	node_objid = op_topo_parent(op_id_self());

	/*
	stream    :  phy [0] -> rt_0 [0]
stream    :  phy [1] -> RR [0]
stream    :  rr_0 [0] -> phy [0]
stream    :  user [0] -> phy [1]
stream    :  RR [0] -> phy [2]
	*/

phy_mod_data_ptr = (Opencell_Phy_Mod_Data*) opencell_mem_alloc (sizeof (Opencell_Phy_Mod_Data));
	phy_mod_data_ptr->rr_objid = op_id_from_name (node_objid, OPC_OBJTYPE_PROC, "RR");
	phy_mod_data_ptr->user_objid = op_id_from_name (node_objid, OPC_OBJTYPE_PROC, "user");
		phy_mod_data_ptr->rr_ostrm = 1;
	phy_mod_data_ptr->user_ostrm = 2;
	phy_mod_data_ptr->tx_ostrm = 0;
	op_pro_modmem_install(phy_mod_data_ptr);
	
	
    FOUT;
}

static void start_radio_access(void)
{
	simtime_t next_slot_time;
	simtime_t cur_time;
	
    FIN(start_radio_access());
	
	cur_time = opencell_simtime_get();
	next_slot_time = opencell_next_slot(cur_time);
	op_intrpt_schedule_call (next_slot_time, 0, start_rach, OPC_NIL);


    FOUT;
} 

static void start_rach(void* state_ptr, int code)
{   
   FIN(start_rach());


    rach_pro = op_pro_create("opencell_rach", OPC_NIL);
    op_pro_invoke(rach_pro, OPC_NIL);


    FOUT;
}



]]>
	</function-block>
	<states initial-state-id="0">
		<state id="0" x="150" y="210">
			<attribute name="name" type="string" value="Init"/>
			<attribute name="Enter Execs" type="textlist">
				<value-text>
<![CDATA[
init();
]]>
				</value-text>
			</attribute>
			<attribute name="status" type="toggle" value="1"/>
		</state>
		<state id="1" x="330" y="210">
			<attribute name="name" type="string" value="Idle"/>
		</state>
		<state id="2" x="510" y="210">
			<attribute name="name" type="string" value="Dedicated"/>
		</state>
		<state id="3" x="330" y="90">
			<attribute name="name" type="string" value="Wait_Access"/>
		</state>
	</states>
	<transitions>
		<transition source-state-id="0" destination-state-id="1" label-x="243" label-y="207">
			<path-point x="164" y="204"/>
			<path-point x="321" y="210"/>
			<attribute name="name" type="string" value="tr_0"/>
		</transition>
		<transition source-state-id="1" destination-state-id="1" label-x="334" label-y="310">
			<path-point x="317" y="228"/>
			<path-point x="241" y="309"/>
			<path-point x="391" y="314"/>
			<path-point x="342" y="224"/>
			<attribute name="name" type="string" value="tr_2"/>
			<attribute name="condition" type="string" value="default"/>
		</transition>
		<transition source-state-id="1" destination-state-id="3" label-x="188" label-y="107">
			<path-point x="313" y="197"/>
			<path-point x="240" y="136"/>
			<path-point x="318" y="91"/>
			<attribute name="name" type="string" value="tr_3"/>
			<attribute name="condition" type="string" value="CALL_REQ"/>
			<attribute name="executive" type="string" value="start_radio_access()"/>
		</transition>
		<transition source-state-id="3" destination-state-id="2" label-x="461" label-y="127">
			<path-point x="354" y="91"/>
			<path-point x="519" y="212"/>
			<attribute name="name" type="string" value="tr_1"/>
			<attribute name="condition" type="string" value="DCH_INITED"/>
		</transition>
	</transitions>
	<child-processes>
<![CDATA[
opencell_rach
]]>
	</child-processes>
</process-model>
